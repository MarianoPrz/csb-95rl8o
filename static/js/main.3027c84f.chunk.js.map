{"version":3,"sources":["Utils.js","ctxApp/SquareCtx.js","ctxApp/SquareCtxApp.js","recoilApp/Square.js","recoilApp/SquareRecoilApp.js","App.js","index.js"],"names":["randomColor","Math","floor","random","toString","SquareCtx","id","useContext","Squares","allSquares","setSquare","square","className","onClick","useCallback","newState","color","style","backgroundColor","createContext","SquareCtxApp","useState","Array","from","_","i","Provider","value","map","s","squareState","atomFamily","key","default","Square","useRecoilState","SquareRecoilApp","App","rootElement","document","getElementById","createRoot","render"],"mappings":"mLAAO,SAASA,IACd,MAAO,IAAMC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,I,WCsB9CC,EAnBG,SAAC,GAAY,IAAVC,EAAS,EAATA,GACnB,EAAkCC,qBAAWC,GAArCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UACdC,EAASF,EAAWH,GAE1B,OACE,qBACEM,UAAU,SACVC,QAASC,uBAAY,WACnB,IAAMC,EAAQ,YAAON,GACrBM,EAAST,GAAIU,MAAQhB,IACrBU,EAAUK,KACT,CAACN,EAAYC,EAAWJ,IAC3BW,MAAO,CACLC,gBAAe,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAQK,UCdpBR,EAAUW,wBAAc,MAwBtBC,EAtBM,WACnB,MAAgCC,mBAC9BC,MAAMC,KAAKD,MAAM,IAAI,SAACE,EAAGC,GAAJ,MAAW,CAC9BnB,GAAImB,EACJT,MAAO,eAHX,mBAAOP,EAAP,KAAmBC,EAAnB,KAOA,OACE,sBAAKE,UAAU,oBAAf,UACE,iDACA,cAACJ,EAAQkB,SAAT,CAAkBC,MAAO,CAAElB,aAAYC,aAAvC,SACE,qBAAKE,UAAU,oBAAf,gBACGH,QADH,IACGA,OADH,EACGA,EAAYmB,KAAI,SAACC,EAAGJ,GAAJ,OACf,cAAC,EAAD,CAAuBnB,GAAE,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAGvB,IAA9B,OAAgBuB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAGvB,e,OCfzBwB,EAAcC,YAAW,CAC7BC,IAAK,SACLC,QAAS,CAAEjB,MAAO,aAkBLkB,EAfA,SAAC,GAAY,IAAV5B,EAAS,EAATA,GAChB,EAA4B6B,YAAeL,EAAYxB,IAAvD,mBAAOK,EAAP,KAAeD,EAAf,KACA,OACE,qBACEG,QAASC,uBAAY,WACnBJ,EAAU,CAAEM,MAAOhB,QAClB,CAACU,IACJO,MAAO,CACLC,gBAAiBP,EAAOK,OAE1BJ,UAAU,YCDDwB,EAfS,WACtB,OACE,cAAC,IAAD,UACE,sBAAKxB,UAAU,aAAf,UACE,0CACA,qBAAKA,UAAU,oBAAf,SACGU,MAAMC,KAAKD,MAAM,IAAI,SAACE,EAAGC,GAAJ,OACpB,cAAC,EAAD,CAA+BnB,GAAI,aAAemB,GAArC,aAAeA,cCNzB,SAASY,IACtB,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OCJN,IAAM0B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACL,EAAD,S","file":"static/js/main.3027c84f.chunk.js","sourcesContent":["export function randomColor() {\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\n","import { useContext, useCallback } from \"react\";\nimport { Squares } from \"./SquareCtxApp\";\nimport { randomColor } from \"../Utils\";\n\nconst SquareCtx = ({ id }) => {\n  const { allSquares, setSquare } = useContext(Squares);\n  const square = allSquares[id];\n\n  return (\n    <div\n      className=\"square\"\n      onClick={useCallback(() => {\n        const newState = [...allSquares];\n        newState[id].color = randomColor();\n        setSquare(newState);\n      }, [allSquares, setSquare, id])}\n      style={{\n        backgroundColor: square?.color\n      }}\n    ></div>\n  );\n};\n\nexport default SquareCtx;\n","import { useState, createContext } from \"react\";\nimport SquareCtx from \"./SquareCtx\";\n\nexport const Squares = createContext(null);\n\nconst SquareCtxApp = () => {\n  const [allSquares, setSquare] = useState(\n    Array.from(Array(9), (_, i) => ({\n      id: i,\n      color: \"#000000\"\n    }))\n  );\n\n  return (\n    <div className=\"react-context-app\">\n      <h2> React Context </h2>\n      <Squares.Provider value={{ allSquares, setSquare }}>\n        <div className=\"square__container\">\n          {allSquares?.map((s, i) => (\n            <SquareCtx key={s?.id} id={s?.id}></SquareCtx>\n          ))}\n        </div>\n      </Squares.Provider>\n    </div>\n  );\n};\n\nexport default SquareCtxApp;\n","import { useCallback } from \"react\";\nimport { atomFamily, useRecoilState } from \"recoil\";\nimport { randomColor } from \"../Utils\";\n\nconst squareState = atomFamily({\n  key: \"square\",\n  default: { color: \"#000000\" }\n});\n\nconst Square = ({ id }) => {\n  const [square, setSquare] = useRecoilState(squareState(id));\n  return (\n    <div\n      onClick={useCallback(() => {\n        setSquare({ color: randomColor() });\n      }, [setSquare])}\n      style={{\n        backgroundColor: square.color\n      }}\n      className=\"square\"\n    ></div>\n  );\n};\n\nexport default Square;\n","import { RecoilRoot } from \"recoil\";\nimport Square from \"./Square\";\n\nconst SquareRecoilApp = () => {\n  return (\n    <RecoilRoot>\n      <div className=\"recoil-app\">\n        <h2> Recoil </h2>\n        <div className=\"square__container\">\n          {Array.from(Array(9), (_, i) => (\n            <Square key={\"square-id-\" + i} id={\"square-id-\" + i}></Square>\n          ))}\n        </div>\n      </div>\n    </RecoilRoot>\n  );\n};\n\nexport default SquareRecoilApp;\n","import \"./styles.css\";\nimport SquareCtxApp from \"./ctxApp/SquareCtxApp\";\nimport SquareRecoilApp from \"./recoilApp/SquareRecoilApp\";\n\nexport default function App() {\n  return (\n    <div className=\"app\">\n      <SquareRecoilApp />\n      <SquareCtxApp />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}